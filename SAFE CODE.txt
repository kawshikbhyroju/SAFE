Main Activity

package edu.gcu.gpstrackingdemo;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import android.Manifest;
import android.annotation.SuppressLint;
import android.content.pm.PackageManager;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;
import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.location.LocationCallback;
import com.google.android.gms.location.LocationRequest;
import com.google.android.gms.location.LocationResult;
import com.google.android.gms.location.LocationServices;
import com.google.android.gms.tasks.OnSuccessListener;
import java.util.List;
public class MainActivity extends AppCompatActivity {
    public static final int DEFAULT_UPDATE_INTERVAL = 30;
    public static final int FAST_UPDATE_INVTERVAL = 5;
    private static final int PERMISSIONS_FINE_LOCATION = 99;
    


TextView tv_lat, tv_lon, tv_altitude, tv_accuracy, tv_speed, tv_sensor, tv_updates, tv_address, tv_wayPointCounts;
    Button btn_newWaypoint, btn_showWayPointList;
    Switch sw_locationupdates, sw_gps;
    FusedLocationProviderClient fusedLocationProviderClient;
    boolean updateOn = false;
    LocationCallback locationCallback;
    LocationRequest locationRequest;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Location currentLocation;
        tv_lat = findViewById(R.id.tv_lat);
        tv_lon = findViewById(R.id.tv_lon);
        tv_altitude = findViewById(R.id.tv_altitude);
        tv_accuracy = findViewById(R.id.tv_accuracy);
        tv_speed = findViewById(R.id.tv_speed);
        tv_sensor = findViewById(R.id.tv_sensor);
        tv_updates = findViewById(R.id.tv_updates);
        tv_address = findViewById(R.id.tv_address);
        sw_gps = findViewById(R.id.sw_gps);
        sw_locationupdates = findViewById(R.id.sw_locationsupdates);
        locationRequest = new LocationRequest();
        locationRequest.setInterval(1000 * DEFAULT_UPDATE_INTERVAL);
        locationRequest.setFastestInterval(1000 * FAST_UPDATE_INVTERVAL);     locationRequest.setPriority(LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY);
        locationCallback =new LocationCallback() {
            @Override
            public void onLocationResult(@NonNull LocationResult locationResult) {    super.onLocationResult(locationResult);

updateUIValues(locationResult.getLastLocation());
            }
        };
        sw_gps.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (sw_gps.isChecked()) {
                    	locationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURAC	Y);
                    tv_sensor.setText("Using GPS sensors");
                }
                else{
             	locationRequest.setPriority(locationRequest.PRIORITY_BALANCED_POW	ER_ACCURACY);
                    tv_sensor.setText("Using Towers + WIFI");
                }
            }
        });
        sw_locationupdates.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (sw_locationupdates.isChecked()) {
                    startLocationUpdates();
                }
                else {
                    stopLocationUpdates();
                }
            }
        });
 updateGPS();
}

    private void stopLocationUpdates() {
        tv_updates.setText("Location is NOT being tracked");
        tv_lat.setText("Not tracking location");
        tv_lon.setText("Not tracking location");
        tv_speed.setText("not tracking location");
        tv_address.setText("Not tracking location");
        tv_accuracy.setText("Not tracking location");
        tv_altitude.setText("Not tracking location");
        tv_sensor.setText("Not tracking location");
        fusedLocationProviderClient.removeLocationUpdates(locationCallback);
    }
    private void startLocationUpdates() {
        tv_updates.setText(" Location is being tracked");
        FusedLocationProviderClient fusedLocationProviderClient = 	this.fusedLocationProviderClient;
        updateGPS();
    }
    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull 	String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, 	grantResults);
        switch (requestCode){
            case PERMISSIONS_FINE_LOCATION:
                if (grantResults[0] == 	PackageManager.PERMISSION_GRANTED) {
                    updateGPS();
                }
                else {
                    Toast.makeText(this,"this apps requires permission to be granted 	to work properly",Toast.LENGTH_SHORT).show();
                    finish();
                } break;
        } }


    private void updateGPS(){
        fusedLocationProviderClient = 	LocationServices.getFusedLocationProviderClient(MainActivity.this);
        if(ActivityCompat.checkSelfPermission( this, 		Manifest.permission.ACCESS_FINE_LOCATION) == 	PackageManager.PERMISSION_GRANTED){

            	fusedLocationProviderClient.getLastLocation().addOnSuccessListener(this, 	new OnSuccessListener<Location>() {
                @Override
                public void onSuccess(Location location) {
                    updateUIValues(location);
                }
            });
        }
        else {
            if(Build.VERSION.SDK_INT >=Build.VERSION_CODES.M){
                requestPermissions(newString[] 	 {Manifest.permission.ACCESS_FINE_LOCATION}, 	                PERMISSIONS_FINE_LOCATION);
            }
        }
    }
    private void updateUIValues(Location location) {
        tv_lat.setText(String.valueOf(location.getLatitude()));
        tv_lon.setText(String.valueOf(location.getLongitude()));
        tv_accuracy.setText(String.valueOf(location.getAccuracy()));
        if(location.hasAltitude()){
            tv_altitude.setText(String.valueOf(location.getAltitude()));
        }
        else{
            tv_altitude.setText(" not available");}

        if(location.hasSpeed()){
            tv_speed.setText(String.valueOf(location.getSpeed()));
        }
        else{
            tv_speed.setText(" not available");
        }

        Geocoder geocoder = new Geocoder(MainActivity.this);
        try {
            List<Address> addresses = geocoder.getFromLocation(location.getLatitude(),location.getLongitude(), 1);
            tv_address.setText(addresses.get(0).getAddressLine( 0));
        }
        catch (Exception e){
            tv_address.setText("unable to get street address");
        }
    }
}




Android Manifest.XML 

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView

        android:id="@+id/tv_labellat"
        android:layout_width="100dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="32dp"
        android:text="Lat:"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/tv_lat"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="32dp"
        android:text="0.00"
        app:layout_constraintStart_toEndOf="@+id/tv_labellat"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/tv_labellon"
        android:layout_width="100dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="lon:"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/tv_labellat" />

    <TextView
        android:id="@+id/tv_lon"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="0.00"
        app:layout_constraintStart_toEndOf="@+id/tv_labellon"
        app:layout_constraintTop_toBottomOf="@+id/tv_lat" />


    <TextView
        android:id="@+id/tv_labelaltitude"
        android:layout_width="100dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Altitude:"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/tv_labellon" />

    <TextView
        android:id="@+id/tv_altitude"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="0.00"
        app:layout_constraintStart_toEndOf="@+id/tv_labelaltitude"
        app:layout_constraintTop_toTopOf="@+id/tv_labelaltitude" />

    <TextView
        android:id="@+id/tv_labelaccuracy"
        android:layout_width="100dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Accuracy:"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/tv_labelaltitude" />

    <TextView
        android:id="@+id/tv_accuracy"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="0.00"
        app:layout_constraintStart_toEndOf="@+id/tv_labelaccuracy"
        app:layout_constraintTop_toTopOf="@+id/tv_labelaccuracy" />


    <TextView
        android:id="@+id/tv_labelspeed"
        android:layout_width="100dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Speed:"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/tv_labelaccuracy" />

    <TextView
        android:id="@+id/tv_speed"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="0.00"
        app:layout_constraintStart_toEndOf="@+id/tv_labelspeed"
        app:layout_constraintTop_toTopOf="@+id/tv_labelspeed" />

    <TextView
        android:id="@+id/tv_labelsensor"
        android:layout_width="100dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Sensor:"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/sw_gps" />

    <TextView
        android:id="@+id/tv_sensor"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Cell Tower + Wifi"
        app:layout_constraintStart_toEndOf="@+id/tv_labelsensor"
        app:layout_constraintTop_toTopOf="@+id/tv_labelsensor" />


    <TextView
        android:id="@+id/tv_labelupdates"
        android:layout_width="100dp"
        android:layout_height="wrap_content"
        android:text="Updates:"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/sw_locationsupdates" />

    <TextView
        android:id="@+id/tv_updates"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Off"
        app:layout_constraintStart_toEndOf="@+id/tv_labelupdates"
        app:layout_constraintTop_toTopOf="@+id/tv_labelupdates" />

    <Switch
        android:id="@+id/sw_locationsupdates"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:checked="true"
        android:minHeight="48dp"
        android:text="Location Updates"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/divider" />

    <Switch
        android:id="@+id/sw_gps"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"

        android:minHeight="48dp"
        android:text="GPS/SavePower"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/tv_labelupdates" />

    <TextView
        android:id="@+id/tv_address"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintStart_toEndOf="@+id/tv_lbladdress"
        app:layout_constraintTop_toTopOf="@+id/tv_lbladdress" />

    <TextView
        android:id="@+id/tv_lbladdress"
        android:layout_width="100dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Address:"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/tv_labelspeed" />
    <View
        android:id="@+id/divider"
        android:layout_width="409dp"
        android:layout_height="1dp"
        android:layout_marginStart="16dp"
        android:layout_marginTop="32dp"
        android:background="?android:attr/listDivider"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
</androidx.constraintlayout.widget.ConstraintLa